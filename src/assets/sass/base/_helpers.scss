// -----------------------------------------------------------------------------
// This file contains CSS helper classes.
// -----------------------------------------------------------------------------

// Clear inner floats
.clearfix {
  @include clearfix;
}

// Main content containers
// 1. Make the container full-width with a maximum width
// 2. Center it in the viewport
// 3. Leave some space on the edges, especially valuable on small screens
.page__wrapper,
.layout__container {
  max-width: $max-width; // 1
  margin-left: auto; // 2
  margin-right: auto; // 2
  width: 100%; // 1
  position: relative;
}

.page__wrapper {
  min-height: 100vh;

  // TODO Development aid
  // background: image('grid.png') top center repeat-y;
  // background-size: 100% auto;
}

.layout__container {
  // background: image('grid.png') top center repeat-y;
  // background-size: 100% auto;

  padding: 0 .5rem;

  @include respond-to('hd') {
    padding: 0;
  }
}

.divider {
  @include size(100% 1px);
  display: block;
  background-color: $frame-color;
  margin: .5rem 0;
}

.space--top { padding-top: 1rem; }
.space--bottom { padding-bottom: 1rem; }
.space--left { padding-left: 1rem; }
.space--right { padding-right: 1rem; }

// Hide text while making it readable for screen readers
// 1. Needed in WebKit-based browsers because of an implementation bug;
//    See: https://code.google.com/p/chromium/issues/detail?id=457146
.hide-text {
  overflow: hidden;
  padding: 0; // 1
  text-indent: 101%;
  white-space: nowrap;
}

// Hide element while making it readable for screen readers
// Shamelessly borrowed from HTML5Boilerplate:
// https://github.com/h5bp/html5-boilerplate/blob/master/src/css/main.css#L119-L133
.visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

.kill {
  display: none;
}
