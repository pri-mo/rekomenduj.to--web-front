@charset 'UTF-8';

// -----------------------------------------------------------------------------
// This file contains CSS classes for input, textarea and select fields.
// -----------------------------------------------------------------------------
#{$all-text-inputs} {
  background-color: transparent;
  border: 0;
  outline: none;

  // NOTE Override autcomplete banana yellow... the best i could.
  &:-webkit-autofill {
    -webkit-box-shadow: 0 0 0px 1000px $comp-color inset !important;
    -webkit-text-fill-color: $white !important;
  }
}

@mixin input($back: $brand-color, $static: dynamic-color($back), $focus: rgba(dynamic-color($back), .64), $error: $comp-color, $ink: rgba(dynamic-color($back), .11), $ratio: $minor-seventh) {
  $alpha-major: .64;
  $alpha-minor: $alpha-major / $ratio;
  $alpha-faint: $alpha-major / 3 / $ratio;

  $tt: normal;

  position: relative;
  margin: 0;
  padding: 1rem 0 2px;

  .input__field {
    display: block;
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    width: 100%;
    height: calc(100% - 1.36rem);
    overflow: hidden;
    z-index: 0;
  }

  .ink {
    background-color: $ink;
  }

  .input__show-password {
    display: none;
    position: absolute;
    right: .0;
    bottom: .5rem;
    height: 2rem;
    width: 3.4rem;
    background-color: rgba($white, .001);
    box-shadow: 0 0 0 1px rgba($static, $alpha-minor);
    color: rgba($static, $alpha-major);
    border-radius: 2px;
    opacity: $alpha-major;
    z-index: 3;

    &::after {
      content: attr(data-label-show);
      display: block;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      width: 100%;
      height: auto;
      text-align: center;
      text-transform: uppercase;
      font-size: .75rem;
      line-height: .9em;
    }

    &.showing {
      opacity: 1;

      &::after {
        content: attr(data-label-hide);
      }
    }
  }

  .roll-out__content > &:first-child {
    margin-top: -.36rem;
  }

  + &,
  + .grid__wrapper {
    margin-top: 1rem;
  }

  input:not([type=file]),
  select,
  textarea,
  label {
    width: 100%;
    display: block;
    margin: 0;
    padding: 0;
    border: 0;
    line-height: 2rem;
  }

  input:not([type=file]),
  select,
  textarea {
    font-size: 1.25rem;
  }

  input + label {
    font-size: 1rem;
  }

  //// Text fields
  input:not([type=file]) {
    @include appearance(none);
    @include transition(.64s $ease-out-expo);

    border-radius: 0;
    padding: .5rem .3rem;
    margin-top: .36rem;
    height: 3rem;
    box-sizing: border-box !important;
    background: rgba($static, 0);
    box-shadow: 0 1px 0 rgba($static, $alpha-faint);
    position: relative;
    z-index: 2;

    @include placeholder {
      @include transition(opacity .36s);
      color: rgba($static, $alpha-faint);
      opacity: 0;
    }

    &[type=date] {
      height: calc(3rem + 1px);
    }

    + label {
      @include transition(.36s $ease-out-expo);

      top: 2rem;
      left: .3rem;
      right: 0;
      color: rgba($static, $alpha-minor);
      font-weight: $light;
      position: absolute;
      white-space: nowrap;
      // white-space: normal;
      padding: 0;
      margin: 0;
      z-index: 1;
    }

    &:focus,
    &:not(:empty) {
      box-shadow: 0 2px 0 $focus;
      color: $static;
      font-weight: $regular;
      outline: none;

      @include placeholder {
        opacity: 1;
      }


      + label {
        color: $focus;
        font-size: .75rem;
        line-height: 1em;
        top: .5rem;
        left: 0;
        text-transform: $tt;
        font-weight: $regular;
      }

      ~ .input__show-password {
        display: block;
        cursor: pointer;
      }
    }

    &.input--used {
      box-shadow: 0 1px 0 rgba($static, $alpha-faint);
      color: $static;
      font-weight: $regular;

      + label {
        color: rgba($static, $alpha-minor);
        font-size: .75rem;
        line-height: 1em;
        top: .5rem;
        left: 0;
        text-transform: $tt;
      }

      &.invalid {
        color: $error;
        box-shadow: 0 1px 0 rgba($error, $alpha-major);

        + label {
          color: $error;
        }
      }

      ~ .input__show-password {
        display: block;
        cursor: pointer;
      }
    }
  }

  // Longform fields
  textarea {
    @include appearance(none);
    @include transition(box-shadow .64s $ease-out-expo);

    border-radius: 0;
    padding: .5rem .3rem;
    margin-top: .36rem;
    background: rgba($static, 0);
    box-shadow: 0 1px 0 rgba($static, $alpha-faint);
    resize: none;
    height: 3rem;
    max-height: calc(2rem * 7 + 1rem);
    position: relative;
    z-index: 2;

    @include placeholder {
      @include transition(opacity .36s);
      color: rgba($static, $alpha-faint);
      opacity: 0;
    }


    + label {
      @include transition(.36s $ease-out-expo);
      top: 2rem;
      left: .3rem;
      right: 0;
      color: rgba($static, $alpha-minor);
      font-weight: $light;
      position: absolute;
      white-space: nowrap;
      padding: 0;
      margin: 0;
      z-index: 1;
    }

    &:focus,
    &:not(:empty) {
      box-shadow: 0 2px 0 $focus;
      color: $static;
      font-weight: $regular;
      outline: none;

      @include placeholder {
        opacity: 1;
      }

      + label {
        color: $focus;
        font-size: .75rem;
        line-height: 1em;
        top: .5rem;
        left: 0;
        text-transform: $tt;
        font-weight: $regular;
      }
    }

    &.input--used,
    &.input--used:focus {
      box-shadow: 0 1px 0 rgba($static, $alpha-faint);
      color: $static;
      font-weight: $regular;

      + label {
        color: rgba($static, $alpha-minor);
        font-size: .75rem;
        line-height: 1em;
        top: .5rem;
        left: 0;
        text-transform: $tt;
      }

      &.invalid {
        color: $error;

        + label {
          color: $error;
        }
      }
    }
  }

  //// Number box
  &.input--number {
    input {
      text-align: right;
      padding-left: 3rem;
      padding-right: 50%;

      + label {
        text-align: center;
      }

      ~ .number__suffix {
        display: none;
      }

      &.input--used ~ .number__suffix,
      &:focus ~ .number__suffix {
        display: block;
      }

      &.input--used {
        &.invalid {
          color: $error;

          @include placeholder {
            opacity: 0;
          }

          &:focus {
            box-shadow: 0 2px 0 $error;
          }

          + label {
            color: $error;
            font-size: .75rem;
            line-height: 1em;
            bottom: 3rem;
            left: 0;
            text-transform: $tt;
          }

          ~ .number__suffix {
            color: $error;
          }
        }

        + label {
          text-align: left;
        }
      }

      &:focus,
      &:not(:empty):valid {
        @include placeholder {
          opacity: 0;
        }


        + label {
          text-align: left;
        }
      }
    }

    .number__more,
    .number__less {
      @include user-select(none);

      display: block;
      position: absolute;
      font-size: 2rem;
      line-height: 2rem;
      height: 2rem;
      bottom: .5rem;
      z-index: 10;
      cursor: pointer;
    }

    .number__more {
      right: 0;
    }

    .number__less {
      left: 0;
    }

    .number__suffix {
      position: absolute;
      padding: .5rem 0 .5rem .5rem;
      bottom: .1rem;
      left: 50%;
      font-size: 1.3rem;
      line-height: 2rem;
      opacity: $alpha-major;
    }

    // ! hide defoult number spinner
    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
      -webkit-appearance: none;
      margin: 0;
    }
  }

  //// Checkbox
  &.input--check {
    @include transition(max-height .64s $ease-in-out-quad);

    max-height: 5rem;
    overflow: hidden;

    &::after {
      @include transition(opacity .64s $ease-in-out-quad);
      @include linear-gradient(top, rgba($back, 0), $back);

      content: '';
      display: block;
      position: absolute;
      bottom: 0;
      left: 3rem;
      right: 0;
      height: 2rem;
      z-index: 22;
    }

    input {
      display: none;
    }

    label {
      @include hyphens(auto);

      cursor: pointer;
      font-size: .64rem;
      line-height: 1.5em;
      padding-top: 1.5rem;
      padding-left: 3rem;
      position: relative;
      text-align: justify;
      z-index: 1;

      .more {
        display: block;
        height: .64rem;
      }

      &::before {
        content: attr(data-label);
        color: rgba($static, $alpha-minor);
        font-size: .75rem;
        line-height: 1em;
        position: absolute;
        top: 0;
        left: 0;
        text-transform: uppercase;
      }

      .input--check__icon {
        @extend %reko-glyph;

        @include transition(.64s $ease-out-expo);

        text-align: center;
        font-size: 1.64rem;
        line-height: 2rem;
        height: 2rem;
        width: 2rem;
        position: absolute;
        top: 1.36rem;
        left: .36rem;
        border-radius: 100%;
        background-color: #fff;
        box-shadow: $shadow-2;

        &::before {
          @include transform(translate(-50%, -50%));
          @include transition(.64s $ease-out-expo);

          content: '\63';
          color: $bright;
          opacity: 0;
          position: absolute;
          left: 53%;
          top: 55%;
        }
      }

      :checked + .input--check__icon {
        background-color: $focus;
        box-shadow: $shadow-2a;

        &::before {
          opacity: 1;
        }
      }
    }

    &:focus,
    &:hover {
      max-height: 50rem;

      &::after {
        opacity: 0;
      }
    }

    .input__field {
      height: calc(100% - 2rem);
      z-index: 0;
    }
  }

  //// Select Boxes
  &.input--select {
    &::before {
      @extend %reko-glyph;

      content: '\75';
      position: absolute;
      right: .0;
      bottom: .5rem;
      top: auto;
      z-index: 1;
      font-size: 2rem;
      line-height: 1.1;
    }
  }

  select {
    @include appearance(none);
    @include transition(.64s $ease-out-expo);

    border-radius: 0;
    padding: .5rem .3rem;
    margin-top: .5rem;
    background: rgba($static, 0);
    box-shadow: 0 1px 0 rgba($static, $alpha-faint);

    position: relative;
    z-index: 2;

    @include placeholder {
      @include transition(opacity .36s);

      color: rgba($static, $alpha-faint);
      opacity: 0;
    }

    + label {
      @include transition(.36s $ease-out-expo);

      bottom: .5rem;
      left: .3rem;
      right: 0;
      color: rgba($static, $alpha-minor);
      font-weight: $light;
      position: absolute;
      white-space: nowrap;
      padding: 0;
      margin: 0;
      z-index: 0;
    }

    &:focus {
      box-shadow: 0 2px 0 $focus;
      color: $static;
      font-weight: $regular;
      outline: none;

      @include placeholder {
        opacity: 1;
      }

      + label {
        color: $focus;
        font-size: .75rem;
        line-height: 1em;
        bottom: 3rem;
        left: 0;
        text-transform: $tt;
        font-weight: $regular;
      }
    }

    &.input--used {
      box-shadow: 0 1px 0 rgba($static, $alpha-faint);
      color: $static;
      font-weight: $regular;

      + label {
        color: rgba($static, $alpha-minor);
        font-size: .75rem;
        line-height: 1em;
        bottom: 3rem;
        left: 0;
        text-transform: $tt;
      }

      &.invalid {
        color: $error;

        + label {
          color: $error;
        }
      }
    }
  }

  /// File Upload
  &.input--file-upload {
    @include appearance(none);
    @include backface-visibility(hidden);
    @include transform(translate3d(0, 0, 0));
    @include transition($transition);
    margin: 0;
    padding: 0;
    height: 6rem;
    overflow: hidden;
    // border: 1px solid $frame-color;

    &.cover__container {
      background-color: $black !important;
    }

    .input__field {
      display: none;
    }

    .file-upload__file-preview {
      z-index: 0 !important;
    }

    input {
      width: .1px;
      height: .1px;
      opacity: 0;
      overflow: hidden;
      position: absolute;
      z-index: -100;
    }

    label {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      padding: 1.5rem 0 0 5rem;
      display: block;
      cursor: pointer;

      .file-upload__icon {
        @include transform(translate3d(0%, -50%, 0));
        font-size: $ico-size-m;
        position: absolute;
        top: 50%;
        left: 1.5rem;
      }

      .file-upload__cta {
        display: block;
        font-size: .88rem;
        line-height: 1.36em;
      }

      .file-upload__file-size {
        display: block;
        font-size: .75rem;
        line-height: 1.36em;
      }
    }

    &.input--button {
      @include size($button-height);
      background-color: $white;
      border-radius: 50%;
      border: 1px solid $frame-color;
      box-shadow: 0;
      color: $text-color;
      cursor: pointer;
      font-size: 1.36rem;
      font-weight: $regular;
      line-height: 1em;
      min-width: $button-height;
      min-height: $button-height;
      overflow: hidden;
      position: relative;
      text-align: center;
      white-space: nowrap;
      z-index: 1;
      padding: 0;

      label {
        padding: 0;
      }

      [data-icon] {
        @include transform($move-to-center);
        font-size: $button-height * .64;
        line-height: 1;
        left: 50%;
        position: absolute;
        top: 52%;
      }

      @include on-event {
        color: $white;
        border-color: $accept-color;
        background-color: $accept-color;
        box-shadow: $shadow-button;
        outline: none;
      }
    }
  }

  //// Expetions for labeled instances
  &.input--show-label {
    input,
    select {
      font-weight: $regular;

      @include placeholder {
        opacity: $alpha-major;
      }

      + label {
        font-size: .75rem;
        line-height: 1em;
        top: .5rem;
        left: 0;
        text-transform: $tt;
      }

      &:focus,
      &:valid {
        @include placeholder {
          opacity: 1;
        }
      }
    }

    textarea {
      font-weight: $regular;

      @include placeholder {
        opacity: $alpha-major;
      }


      + label {
        font-size: .75rem;
        line-height: 1em;
        top: .5rem;
        left: 0;
        text-transform: $tt;
      }

      &:focus,
      &:valid {
        @include placeholder {
          opacity: 1;
        }
      }
    }

    &.input--check {
      input {
        font-weight: $regular;

        @include placeholder {
          opacity: $alpha-major;
        }

        + label {
          font-size: .75rem;
          line-height: 1em;
          top: .36rem;
          left: 0;
          text-transform: $tt;
        }

        &:focus,
        &:valid {
          @include placeholder {
            opacity: 1;
          }
        }
      }
    }
  }

  &.input--show-label-diary {
    padding-left: 2% !important;
    input,
    select {
      font-weight: $regular;

      @include placeholder {
        opacity: $alpha-major;
      }

      + label {
        position: relative;
        font-size: .75rem;
        line-height: 1em;
        bottom: -0.5rem;
        left: 0;
        text-transform: $tt;
      }

      &:focus,
      &:valid {
        @include placeholder {
          opacity: 1;
        }
      }
    }

    textarea {
      font-weight: $regular;

      @include placeholder {
        opacity: $alpha-major;
      }


      + label {
        font-size: .75rem;
        line-height: 1em;
        top: .5rem;
        left: 0;
        text-transform: $tt;
      }

      &:focus,
      &:valid {
        @include placeholder {
          opacity: 1;
        }
      }
    }

    &.input--check {
      input {
        font-weight: $regular;

        @include placeholder {
          opacity: $alpha-major;
        }

        + label {
          font-size: .75rem;
          line-height: 1em;
          top: .36rem;
          left: 0;
          text-transform: $tt;
        }

        &:focus,
        &:valid {
          @include placeholder {
            opacity: 1;
          }
        }
      }
    }
  }

  &.input--tight-text {
    input,
    textarea,
    select {
      font-size: 1rem;
      line-height: 1.25em;
      height: 2.5rem;

      &:not(:focus):not(.input--used) + label {
        font-size: 1rem;
        line-height: 1.3em;
      }
    }
  }
}

.input {
  @include input($back: $white, $focus: $brand-color-darker);
}

.input--focus-green {
  @include input($back: $white, $focus: $accept-color);
}

// The Inverse themes
.paint--gradient .input,
.transparent--inverse .input,
.cover__video .input,
.cover__container .input {
  @include input($back: $black, $focus: $brand-color-darker);
}

.paint--brand .input,
.picked .input {
  @include input($back: $brand-color, $focus: $accent-color);
}

.paint--accent .input {
  @include input($back: $accent-color, $focus: $brand-color);
}

.paint--comp .input {
  @include input($back: $comp-color, $focus: $brand-color-darker);
}
